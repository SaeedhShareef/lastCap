{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saeed\\\\Documents\\\\codingProjects\\\\newCapStone\\\\client\\\\src\\\\components\\\\allLocations.js\";\nimport React, { Component } from 'react';\nimport LocationsList from './locationsList.component';\nimport { InfoWindow, withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Geocode from 'react-geocode';\nimport { Descriptions } from 'antd';\nimport AutoComplete from 'react-google-autocomplete';\nGeocode.setApiKey('AIzaSyDgTn8tOhk_R0mnjuG_2HVfPMYpmcVkVKw');\n\nclass allLocations extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      zoom: 15,\n      height: 400,\n      mapPosition: {\n        lat: 0,\n        lng: 0\n      },\n      markerPosition: {\n        lat: 0,\n        lng: 0\n      }\n    };\n\n    this.getCity = addressArray => {\n      let city = '';\n\n      for (let index = 0; index < addressArray.length; index++) {\n        if (addressArray[index].types[0] && 'administrative_area_level_2' === addressArray[index].types[0]) {\n          city = addressArray[index].long_name;\n          return city;\n        }\n      }\n    };\n\n    this.getArea = addressArray => {\n      let area = '';\n\n      for (let index = 0; index < addressArray.length; index++) {\n        if (addressArray[index].types[0]) {\n          for (let j = 0; j < addressArray.length; j++) {\n            if ('sublocality_level_1' === addressArray[index].types[j] || 'locality' === addressArray[index].types[j]) {\n              area = addressArray[index].long_name;\n              return area;\n            }\n          }\n        }\n      }\n    };\n\n    this.getState = addressArray => {\n      let state = '';\n\n      for (let index = 0; index < addressArray.length; index++) {\n        for (let index = 0; index < addressArray.length; index++) {\n          if (addressArray[index].types[0] && 'administrative_area_level_2' === addressArray[index].types[0]) {\n            state = addressArray[index].long_name;\n            return state;\n          }\n        }\n      }\n    };\n\n    this.onMarkerDragEnd = e => {\n      let newLat = e.latLng.lat();\n      let newLng = e.latLng.lng();\n      Geocode.fromLatLng(newLat, newLng).then(response => {\n        console.log('response', response);\n        const address = response.results[0].formatted_address,\n              addressArray = response.results[0].adress_components,\n              city = this.getCity(addressArray),\n              area = this.getArea(addressArray),\n              state = this.getState(addressArray);\n        this.setState({\n          address: address ? address : '',\n          area: area ? area : '',\n          city: city ? city : '',\n          state: state ? state : '',\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          mapPosition: {\n            lat: newLat,\n            lng: newLng\n          }\n        });\n      });\n      console.log('newLat', newLat); // onPlaceSelected = (place) => {\n      //     const address = place.formatted_address,\n      //     addressArray =place.adress_components,\n      //     city = this.getCity(addressArray),\n      //     area = this.getArea(addressArray),\n      //     state = this.getState(addressArray),\n      //     newLat = place.geometry.location.lat(),\n      //     newLng = place.geometry.location.lng();\n      //     this.setState({\n      //         address: (address) ? address : '',\n      //         area: (area) ? area : '',\n      //         city: (city) ? city : '',\n      //         state: (state) ? state : '',\n      //         markerPosition: {\n      //             lat: newLat,\n      //             lng: newLng\n      //         },\n      //         mapPosition: {\n      //             lat: newLat,\n      //             lng: newLng\n      //         },\n      //     })\n      // }\n    };\n  }\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props => /*#__PURE__*/React.createElement(GoogleMap, {\n      defaultZoom: 8,\n      defaultCenter: {\n        lat: 39.103119,\n        lng: -84.512016\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      draggable: true,\n      onDragEnd: this.onMarkerDragEnd,\n      position: {\n        lat: 39.103119,\n        lng: -84.512016\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, \"Hello\"))), /*#__PURE__*/React.createElement(AutoComplete, {\n      style: {\n        width: '100%',\n        height: '40px',\n        paddingLeft: 16,\n        marginTop: 2,\n        marginBottom: '2rem'\n      },\n      types: ['(regions)'],\n      onPlaceSelected: this.onPlaceSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }))));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '1rem',\n        margin: '0 auto',\n        maxWidth: 1000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"iframe\", {\n      title: \" \",\n      style: {\n        padding: '0rem',\n        marginTop: 110,\n        marginBottom: 250\n      },\n      width: \"960\",\n      height: \"560\",\n      src: \"https://www.youtube.com/embed/G8EUiH00BrU\",\n      frameborder: \"0\",\n      allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 1\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"peaches\",\n      style: {\n        padding: '1rem',\n        margin: '0 auto',\n        maxWidth: 1000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"google underline\",\n      style: {\n        marginLeft: 240,\n        marginBottom: 50,\n        fontSize: 70\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, \"Google Maps\"), /*#__PURE__*/React.createElement(Descriptions, {\n      bordered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"City\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 5\n      }\n    }, this.state.city), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 5\n      }\n    }, this.state.area), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"State\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }\n    }, this.state.state), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }\n    }, this.state.address)), /*#__PURE__*/React.createElement(MapWithAMarker, {\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDgTn8tOhk_R0mnjuG_2HVfPMYpmcVkVKw&v=3.exp&libraries=geometry,drawing,places\",\n      loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `100%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 31\n        }\n      }),\n      containerElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `400px`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 33\n        }\n      }),\n      mapElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `100%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(LocationsList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default allLocations;","map":{"version":3,"sources":["C:/Users/saeed/Documents/codingProjects/newCapStone/client/src/components/allLocations.js"],"names":["React","Component","LocationsList","InfoWindow","withScriptjs","withGoogleMap","GoogleMap","Marker","Geocode","Descriptions","AutoComplete","setApiKey","allLocations","state","address","city","area","zoom","height","mapPosition","lat","lng","markerPosition","getCity","addressArray","index","length","types","long_name","getArea","j","getState","onMarkerDragEnd","e","newLat","latLng","newLng","fromLatLng","then","response","console","log","results","formatted_address","adress_components","setState","render","MapWithAMarker","props","width","paddingLeft","marginTop","marginBottom","onPlaceSelected","padding","margin","maxWidth","marginLeft","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport LocationsList from './locationsList.component'\r\nimport {\r\n    InfoWindow,\r\n    withScriptjs,\r\n    withGoogleMap,\r\n    GoogleMap,\r\n    Marker,\r\n  } from \"react-google-maps\";\r\n\r\nimport Geocode from 'react-geocode';\r\nimport { Descriptions } from 'antd';\r\nimport AutoComplete from 'react-google-autocomplete';\r\n\r\nGeocode.setApiKey('AIzaSyDgTn8tOhk_R0mnjuG_2HVfPMYpmcVkVKw')\r\n\r\n\r\nclass allLocations extends Component {\r\n    \r\n\r\n    state = {\r\n        address: '',\r\n        city: '',\r\n        area: '',\r\n        state: '',\r\n        zoom: 15,\r\n        height: 400,\r\n        mapPosition: {\r\n            lat: 0,\r\n            lng: 0\r\n        },\r\n        markerPosition: {\r\n            lat: 0,\r\n            lng: 0\r\n        }\r\n    }\r\n\r\n    getCity = (addressArray) => {\r\n        let city = '';\r\n        for (let index = 0; index < addressArray.length; index++){\r\n            if(addressArray[index].types[0] && 'administrative_area_level_2' === addressArray[index].types[0]){\r\n                city = addressArray[index].long_name;\r\n                return city;\r\n            }\r\n        }\r\n    }\r\n\r\n    getArea = (addressArray) => {\r\n        let area = '';\r\n        for(let index = 0; index < addressArray.length; index++){\r\n            if(addressArray[index].types[0]) {\r\n                for(let j = 0; j < addressArray.length; j++){\r\n                    if('sublocality_level_1' === addressArray[index].types[j] || 'locality' === addressArray[index].types[j]){\r\n                        area = addressArray[index].long_name;\r\n                        return area;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getState = (addressArray) => {\r\n        let state = '';\r\n        for(let index = 0; index < addressArray.length; index++){\r\n        for(let index = 0; index < addressArray.length; index++){\r\n            if(addressArray[index].types[0] && 'administrative_area_level_2' === addressArray[index].types[0]){\r\n                state = addressArray[index].long_name;\r\n                return state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n    onMarkerDragEnd = (e) => {\r\n    let newLat = e.latLng.lat();\r\n    let newLng = e.latLng.lng();\r\n\r\n    \r\n    Geocode.fromLatLng(newLat, newLng)\r\n        .then(response => {\r\n            console.log('response', response)\r\n            \r\n            const address = response.results[0].formatted_address,\r\n                addressArray = response.results[0].adress_components,\r\n                city = this.getCity(addressArray),\r\n                area = this.getArea(addressArray),\r\n                state = this.getState(addressArray);\r\n\r\n                this.setState({\r\n                    address: (address) ? address : '',\r\n                    area: (area) ? area : '',\r\n                    city: (city) ? city : '',\r\n                    state: (state) ? state : '',\r\n                    markerPosition: {\r\n                        lat: newLat,\r\n                        lng: newLng\r\n                    },\r\n                    mapPosition: {\r\n                        lat: newLat,\r\n                        lng: newLng\r\n                    },\r\n                })\r\n            })\r\n\r\n            console.log('newLat', newLat);\r\n\r\n            // onPlaceSelected = (place) => {\r\n            //     const address = place.formatted_address,\r\n            //     addressArray =place.adress_components,\r\n            //     city = this.getCity(addressArray),\r\n            //     area = this.getArea(addressArray),\r\n            //     state = this.getState(addressArray),\r\n            //     newLat = place.geometry.location.lat(),\r\n            //     newLng = place.geometry.location.lng();\r\n            //     this.setState({\r\n            //         address: (address) ? address : '',\r\n            //         area: (area) ? area : '',\r\n            //         city: (city) ? city : '',\r\n            //         state: (state) ? state : '',\r\n            //         markerPosition: {\r\n            //             lat: newLat,\r\n            //             lng: newLng\r\n            //         },\r\n            //         mapPosition: {\r\n            //             lat: newLat,\r\n            //             lng: newLng\r\n            //         },\r\n            //     })\r\n\r\n            // }\r\n   \r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n\r\n        const MapWithAMarker = withScriptjs(withGoogleMap(props =>\r\n            <GoogleMap\r\n              defaultZoom={8}\r\n              defaultCenter={{ lat: 39.103119, lng: -84.512016 }}\r\n            >\r\n              <Marker\r\n                draggable={true}\r\n                onDragEnd={this.onMarkerDragEnd}\r\n                position={{ lat: 39.103119, lng: -84.512016 }}\r\n              >\r\n                <InfoWindow>\r\n                    <div>\r\n                        Hello\r\n                    </div>\r\n                </InfoWindow>\r\n                \r\n                </Marker>\r\n\r\n            <AutoComplete\r\n                style={{ width: '100%', height: '40px', paddingLeft: 16, marginTop: 2, marginBottom: '2rem' }}\r\n                types={['(regions)']}\r\n                onPlaceSelected={ this.onPlaceSelected }\r\n            />\r\n\r\n            </GoogleMap>\r\n          ));\r\n          \r\n\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div style={{ padding: '1rem', margin:'0 auto', maxWidth: 1000 }}>\r\n                \r\n<iframe title=' ' style={{ padding:'0rem', marginTop: 110, marginBottom: 250 }} width=\"960\" height=\"560\" src=\"https://www.youtube.com/embed/G8EUiH00BrU\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n\r\n                </div>\r\n\r\n            <div  className='peaches' style={{ padding:'1rem', margin:'0 auto', maxWidth: 1000 }}>\r\n                <h2 className=\"google underline\" style={{ marginLeft: 240, marginBottom: 50, fontSize: 70 }}>Google Maps</h2>\r\n                <Descriptions bordered>\r\n    <Descriptions.Item label=\"City\">{this.state.city}</Descriptions.Item>\r\n    <Descriptions.Item label=\"Area\">{this.state.area}</Descriptions.Item>\r\n    <Descriptions.Item label=\"State\">{this.state.state}</Descriptions.Item>\r\n    <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\r\n  </Descriptions>\r\n            \r\n\r\n\r\n\r\n            <MapWithAMarker\r\n              googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDgTn8tOhk_R0mnjuG_2HVfPMYpmcVkVKw&v=3.exp&libraries=geometry,drawing,places\"\r\n              loadingElement={<div style={{ height: `100%` }} />}\r\n              containerElement={<div style={{ height: `400px` }} />}\r\n              mapElement={<div style={{ height: `100%` }} />}\r\n            />\r\n            \r\n            <br>\r\n            </br>\r\n\r\n            <br>\r\n            </br>\r\n\r\n            <br>\r\n            </br>\r\n\r\n            <br>\r\n            </br>\r\n\r\n            <br>\r\n            </br>\r\n\r\n            <br>\r\n            </br>\r\n\r\n            <br>\r\n            </br>\r\n\r\n            <br>\r\n            </br>\r\n\r\n\r\n            <LocationsList />\r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default allLocations;"]},"metadata":{},"sourceType":"module"}